networks:
  default:
    name: load-testing-network

services:

  prometheus:
    image: "prom/prometheus"
    ports:
      - "9090:9090"
    volumes:
      - ../prometheus/prom.yaml:/etc/prometheus/prometheus.yml
    container_name: prometheus

  influxdb:
    container_name: influxdb
    image: influxdb:1.8
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ../grafana/dashboards:/var/lib/grafana/dashboards
      - ../grafana/grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ../grafana/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml

  db-service:
    container_name: db-service
    cap_add:
      - NET_ADMIN
    tty: true
    command: -c 'max_connections=200'
    build:
      context: ../db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - NETWORK_DELAY=100ms
      - NETWORK_JITTER=10ms
    ports:
      - "5432:5432"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '2'
          memory: 500M
        reservations:
          memory: 500M

  spring-boot-virtual-threads:
    container_name: spring-boot-virtual-threads
    build:
      # https://github.com/GaetanoPiazzolla/spring-boot-virtual-threads.git
      context: ../../spring-boot-virtual-threads
      args:
        JAVA_VERSION: "24" # 19 || 24
        SPRING_BOOT_VERSION: "3.5.0" # 3.3.12 || 3.5.0 || 4.0.0-SNAPSHOT
        SPRING_DEPENDENCY_MANAGEMENT_VERSION: "1.1.7" # Change for older versions, this is compatible with both 4.0 and 3.3
        DATASOURCE_TYPE: HIKARI # HIKARI || AGROAL
    depends_on:
      - db-service
    restart: always
    environment:
      - VIRTUAL_THREAD_ENABLED=true # true || false
      - JDBC_URL=jdbc:postgresql://db-service:5432/postgres?currentSchema=library&user=postgres&password=postgres
      - SERVER_PORT=8080
      - CONNECTION_POOL_SIZE=20 # max 200 as configured by the db-service.
    ports:
      - "8080:8080"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          memory: 1G